@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;

    var selection = Umbraco.Content(Guid.Parse("24fd9156-09ce-4833-97b8-2e58e08a8494")).ChildrenOfType("serviceItemTemplate").Where(x => x.IsVisible());

    var itemsPerPage = 6;

    if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
    {
        currentPage = 1;
    }
    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage);
}

@if (!string.IsNullOrEmpty(ViewBag.Title))
{
    @await Html.PartialAsync("partials/static/breadcrumb.cshtml")
}

<section id="our-services">
    <div class="container">
        @if (!string.IsNullOrEmpty(Model.Value("customHeadline")?.ToString()))
        {
            <div class="headline">
                <h2 class="title">@Model.Value("customHeadline")</h2>
            </div>
        }
        <div class="services">
            @if (pagedItems != null)
            {
                @foreach (var item in pagedItems)
                {
                    var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
                    var preamble = item?.Value<string>("preamble") ?? "";

                    <a id="service-item" href="@item.Url()">
                        <div class="item">
                            <div class="header">
                                <h4>@item.Name()</h4>
                            </div>
                            <div class="body">
                                <img src="@image" alt="@item.Name()">
                            </div>
                            <div class="footnote">
                                <p>@preamble</p>
                            </div>
                        </div>
                    </a>
                }
            }
        </div>
        <section class="pagination">
            <div class="container">
                @if (currentPage > 1)
                {
                    <a href="?page=@(currentPage - 1)" class="change">PREV</a>
                }
                else
                {
                    <span class="change inactive">PREV</span>
                }

                <ul class="pages">
                    @for (int i = 1; i <=Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
                    {
                        <li class="@((i == currentPage) ? "number active" : "number")">
                            <a href="?page=@i">@i</a>
                        </li>
                    }
                </ul>
                
                @if (currentPage < Math.Ceiling((decimal)totalItems / itemsPerPage))
                {
                    <a href="?page=@(currentPage + 1)" class="change">NEXT</a>
                }
                else
                {
                    <span class="change inactive">NEXT</span>
                }
            </div>
        </section>
    </div>
</section>

















